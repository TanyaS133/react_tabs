{"version":3,"sources":["components/Tab/Tab.tsx","components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["TabInfo","tab","onTabSelected","isSelected","id","title","href","onClick","Tabs","tabs","onTabSelect","selectedTabId","selectedTab","find","content","className","map","classNames","App","useState","setActiveTab","ReactDOM","render","document","getElementById"],"mappings":"kNAQaA,EAA2B,SAAC,GAIlC,IAHLC,EAGI,EAHJA,IACAC,EAEI,EAFJA,cACAC,EACI,EADJA,WAEQC,EAAcH,EAAdG,GAAIC,EAAUJ,EAAVI,MAEZ,OACE,mBACEC,KAAI,WAAMF,GACV,UAAQ,UACRG,QAAS,WACFJ,GACHD,EAAcD,IALpB,SASGI,KCdMG,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,YACAC,EACI,EADJA,cAEMC,EAAcH,EAAKI,MAAK,SAAAZ,GAAG,OAAIA,EAAIG,KAAOO,MAAkBF,EAAK,GAE/DL,EAAgBQ,EAAhBR,GAAIU,EAAYF,EAAZE,QAEZ,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGN,EAAKO,KAAI,SAAAf,GACR,IAAME,EAAaF,EAAIG,KAAOA,EAE9B,OACE,oBAEEW,UAAWE,IAAW,CAAE,YAAad,IACrC,UAAQ,MAHV,SAKE,cAAC,EAAD,CACEF,IAAKA,EACLC,cAAeQ,EACfP,WAAYA,KAPTF,EAAIG,WAgBnB,qBAAKW,UAAU,QAAQ,UAAQ,aAA/B,SACGD,QCvCIL,EAAO,CAClB,CAAEL,GAAI,QAASC,MAAO,QAASS,QAAS,eACxC,CAAEV,GAAI,QAASC,MAAO,QAASS,QAAS,eACxC,CAAEV,GAAI,QAASC,MAAO,QAASS,QAAS,gBAG7BI,EAAgB,WAC3B,MAAoCC,mBAASV,EAAK,IAAlD,mBAAOG,EAAP,KAAoBQ,EAApB,KAKA,OACE,sBAAKL,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBH,EAAYP,SAGlC,cAAC,EAAD,CACEI,KAAMA,EACNC,YAZkB,SAACT,GACvBmB,EAAanB,IAYTU,cAAeC,EAAYR,SCzBnCiB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.39646312.chunk.js","sourcesContent":["import { Tab } from '../types/Tab';\n\ninterface Props {\n  tab: Tab,\n  onTabSelected:(tab: Tab) => void;\n  isSelected: boolean\n}\n\nexport const TabInfo: React.FC<Props> = ({\n  tab,\n  onTabSelected,\n  isSelected,\n}) => {\n  const { id, title } = tab;\n\n  return (\n    <a\n      href={`#${id}`}\n      data-cy=\"TabLink\"\n      onClick={() => {\n        if (!isSelected) {\n          onTabSelected(tab);\n        }\n      }}\n    >\n      {title}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Tab } from '../types/Tab';\nimport { TabInfo } from '../Tab/Tab';\n\ninterface Props {\n  tabs: Tab[],\n  onTabSelect: (tab: Tab) => void,\n  selectedTabId: string,\n}\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  onTabSelect,\n  selectedTabId,\n}) => {\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  const { id, content } = selectedTab;\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            const isSelected = tab.id === id;\n\n            return (\n              <li\n                key={tab.id}\n                className={classNames({ 'is-active': isSelected })}\n                data-cy=\"Tab\"\n              >\n                <TabInfo\n                  tab={tab}\n                  onTabSelected={onTabSelect}\n                  isSelected={isSelected}\n                />\n              </li>\n            );\n          })}\n\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tab } from './components/types/Tab';\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setActiveTab] = useState(tabs[0]);\n  const handleSelectTab = (tab: Tab) => {\n    setActiveTab(tab);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        onTabSelect={handleSelectTab}\n        selectedTabId={selectedTab.id}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}